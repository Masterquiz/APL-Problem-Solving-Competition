
 ValidGame←{
     game←'X'⎕R'-X'⊢,⍵
     play bonus←20(↑,⍥⊂↓)game           ⍝ Divide play and bonus rolls
     bonus←'-X'⎕R'X'⊢bonus              ⍝ Restore original bonus form
     res←(,≡⊢)⍵                         ⍝ Is a vector?
     res,←game∊⎕D,'-/X'                 ⍝ Correct characters
     res,←~'/X'∊play/⍨20⍴1 0            ⍝ Check if spare(s) and strike(s) are in the rigth place
     res,←{(' '≠⍵),(≢bonus)=⊃⍸'/X'∊⍵}⊃⌽play ⍝ Correct length of bonus
     ∧/res,10>+/¯48+⎕UCS 11 2⍴'0'⍨¨@(∊∘' -/X')22↑play,bonus ⍝ Correct pair-wise sum
 }
 
 ValidGameTest←{
     Assert←{⍺←'Test failed' ⋄ 0∊⍵:⍺ ⎕SIGNAL 8 ⋄ shy←0}
     Assert 0=ValidGame 1 12⍴'X': ⍝ Is a vector?
     Assert 0=ValidGame'O- -- -- -- -- -- -- -- -- --'~' ': ⍝ Correct characters
     Assert 0=ValidGame'-- -X -- -- -- -- -- -- -- --'~' ': ⍝ Strike in correct place
     Assert 0=ValidGame'-- /- -- -- -- -- -- -- -- --'~' ': ⍝ Spare in correct place
     Assert 0=ValidGame'-- 99 -- -- -- -- -- -- -- --'~' ': ⍝ Correct pair-wise sum
     Assert 0=ValidGame'': ⍝ Correct length
     Assert 0=ValidGame'-- -- -- -- -- -- -- -- -- -/ 92'~' ': ⍝ Correct bonus length
     Assert 1=ValidGame'6272348/9-XXX638/7':
     Assert 0=ValidGame'X':
     Assert 0 1 0 1 1≡ValidGame¨20 20 20 21 12⍴¨'6' '9-' '64' '9/' 'X':
     'Test passed'
 }
